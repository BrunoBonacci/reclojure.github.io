{"version":3,"sources":["portal/runtime/web/launcher.cljs"],"mappings":";AAMA,0CAAA,1CAAOA,4FAAUC,MAAMC;AAAvB,AACE,IAAMC,OAAK,KAAAC,KAAA,QAAA,PAAeH,iBAAkBC;IACtCG,MAAK,iBAAAC,mBAAIC;AAAJ,AAAA,oBAAAD;AAAAA;;AAAkBE;;;AAD7B,AAEE,OAAkBH,oBAAIF;;AAE1B,uCAAA,vCAAOM,sFAAUC;AAAjB,AACE,OAACC,4BAA+BD;;AAElC,uCAAA,vCAAOE,sFAAUF,EAAEG;AAAnB,AACE,OAACC,4BAA+BJ,EAAEG;;AAEpC,0CAAA,1CAAOE,4FAAaL;AAApB,AACE,OAACM,wBAA2BN;;AAE9B,GAAA,QAAAO,mCAAAC,2CAAAC,+CAAAC,wDAAAC;AAAA;AAAA,AAAA,AAASC,2CAAa,6CAAA,7CAACC;;AACvB,GAAA,QAAAN,mCAAAC,2CAAAC,+CAAAC,wDAAAI;AAAA;AAAA,AAAA,AAASC,mCAAK;;AACd,GAAA,QAAAR,mCAAAC,2CAAAC,+CAAAC,wDAAAM;AAAA;AAAA,AAAA,AAASC,uCAAS,yEAAA,zEAAC3B,wCAASyB;;AAE5B,yCAAA,zCAAMG,0FAAOC;AAAb,AACE,YAAAC,QACC,WAAKC,QAAQC;AAAb,AACE,IAAMC,OAAK,AAACC,oBAAQL,QAAQM;IACtBC,IAAK,AAACC,4CAAIC,mBAAO,AAAA,gFAAKL;AAD5B,AAEE,IAAAM,sCAAUE;IAAVD,sCAAuBL;AAAvB,AAAA,sCAAAK,rCAAUC;;AAAV,IAAA,AACE,IAAAC,WAAGT;IAAHU,WAAA,WAAAC;AAAA,AAAS,IAAAC,WAAS,qBAAAD,rBAACE,sCAAWX;AAArB,AAAA,sFAAAU,8BAAAA,5GAACd,wCAAAA,kDAAAA;;AAAV,AAAA,0EAAAW,SAAAC,wBAAAD,SAAAC,5GAACP,kCAAAA,qDAAAA;UADH,AAAA,sCAAAG,rCAAUE;;;AAGjB,mCAAA,nCAAMM,8EAAMC;AAAZ,AACE,AAACC,mDAAMC,qBAASC,gBAAMH;;AACtB,IAAM3C,YAAM,oUAAA,pUAACL,wCAAS,iHAAA,iGAAA,8DAAA,hRAACoD,6KAAqBzB;IACtC0B,cAAM,sBAAA,tBAACC,YACAjD,mBAEA,+IAAA,AAAA,8BAAA,3JAAM,AAAA,sHAAA,RAAsB2C;AAJzC,AAME,CAAM,AAAYK,uBACZ;AAAA,AACE,0JAAA,1JAACE,sBAAO,AAAA,iGAAcpB;;AACtB,+CAAA,xCAACpB;;;AACT,CAAM,AAAYyC,kBACZ;AAAA,AACE,oBAAU,AAAUH;AAApB;;AAAA,AACE,4CAAA,rCAACzC,oDAAwB,AAAC6C;;;;AACpC,AAACF,sBAAOjC,yCAAa+B;;AACrB,AAACE,sBAAOG,uBAAW,AAACC,gDAAQC,kCAAUtC;;AAjB1C;;AAoBA,mCAAA,nCAAMuC;AAAN,AACE,IAAAC,qBAAkB,qCAAA,rCAACrD;AAAnB,AAAA,oBAAAqD;AAAA,AAAA,aAAAA,TAAWC;AAAX,AACE,GAAI,mCAAA,lCAAG,CAAG,AAACN,aAAa,AAACO,SAAYD;AACnC,wCAAA,jCAAChB;;AACD,+CAAA,xCAAChC;;;AAHL;;;AAKF,oCAAA,pCAAMkD;AAAN,AACE,kFAAA,2CAAA,kDAAA,xKAACL,kCAAUtC;;AAEb,oCAAA,pCAAM4C;AAAN,AACE,IAAAJ,qBAAA,AAAAK,gBAAkB7C;AAAlB,AAAA,oBAAAwC;AAAA,AAAA,YAAAA,RAAWT;AAAX,AACE,+DAAA,/DAACE,sBAAOjC;;AACR,6CAAA,7CAACiC,sBAAOG;;AACR,OAAQL;;AAHV","names":["portal.runtime.web.launcher/str->src","value","content-type","blob","js/Blob","url","or__4223__auto__","js/window.URL","js/window.webkitURL","portal.runtime.web.launcher/get-item","k","js/window.localStorage.getItem","portal.runtime.web.launcher/set-item","v","js/window.localStorage.setItem","portal.runtime.web.launcher/remove-item","js/localStorage.removeItem","js/portal","js/portal.runtime","js/portal.runtime.web","js/portal.runtime.web.launcher","js/portal.runtime.web.launcher.child-window","portal.runtime.web.launcher/child-window","cljs.core.atom","js/portal.runtime.web.launcher.code","portal.runtime.web.launcher/code","js/portal.runtime.web.launcher.code-url","portal.runtime.web.launcher/code-url","portal.runtime.web.launcher/send!","message","js/Promise","resolve","_reject","body","portal.runtime/read","portal.runtime.web.client/options","f","cljs.core.get","portal.runtime/ops","*options*-orig-val__70198","*options*-temp-val__70199","portal.runtime/*options*","G__70200","G__70201","p1__70197#","G__70202","portal.runtime/write","portal.runtime.web.launcher/open","options","cljs.core.swap_BANG_","portal.runtime/state","cljs.core/merge","portal.runtime.index.html","child","js/window.open","cljs.core/reset!","js/window","js/Date.now","portal.runtime/request","cljs.core.partial","portal.runtime.web.client/request","portal.runtime.web.launcher/init","temp__5753__auto__","string","js/parseInt","portal.runtime.web.launcher/clear","portal.runtime.web.launcher/close","cljs.core/deref"],"sourcesContent":["(ns portal.runtime.web.launcher\n  (:require [portal.resources :as io]\n            [portal.runtime :as rt]\n            [portal.runtime.index :as index]\n            [portal.runtime.web.client :as c]))\n\n(defn- str->src [value content-type]\n  (let [blob (js/Blob. #js [value] #js {:type content-type})\n        url  (or js/window.URL js/window.webkitURL)]\n    (.createObjectURL url blob)))\n\n(defn- get-item [k]\n  (js/window.localStorage.getItem k))\n\n(defn- set-item [k v]\n  (js/window.localStorage.setItem k v))\n\n(defn- remove-item [k]\n  (js/localStorage.removeItem k))\n\n(defonce child-window (atom nil))\n(defonce code (io/resource \"portal/main.js\"))\n(defonce code-url (str->src code \"text/javascript\"))\n\n(defn send! [message]\n  (js/Promise.\n   (fn [resolve _reject]\n     (let [body (rt/read message c/options)\n           f    (get rt/ops (:op body))]\n       (binding [rt/*options* c/options]\n         (f body #(resolve (rt/write % c/options))))))))\n\n(defn open [options]\n  (swap! rt/state merge options)\n  (let [url   (str->src (index/html :code-url code-url :platform \"web\") \"text/html\")\n        child (js/window.open\n               url\n               \"portal\"\n               (when (:portal.launcher/app options true)\n                 \"resizable,scrollbars,status\"))]\n    (set! (.-onunload child)\n          (fn []\n            (reset! (:value-cache c/options) {})\n            (remove-item \":portal/open\")))\n    (set! (.-onunload js/window)\n          (fn []\n            (when-not (.-closed child)\n              (set-item \":portal/open\" (js/Date.now)))))\n    (reset! child-window child)\n    (reset! rt/request (partial c/request child-window)))\n  true)\n\n(defn init []\n  (when-let [string (get-item \":portal/open\")]\n    (if (< (- (js/Date.now) (js/parseInt string)) 5000)\n      (open nil)\n      (remove-item \":portal/open\"))))\n\n(defn clear []\n  (c/request child-window {:op :portal.rpc/clear}))\n\n(defn close []\n  (when-let [child @child-window]\n    (reset! child-window nil)\n    (reset! rt/request nil)\n    (.close child)))\n\n"]}